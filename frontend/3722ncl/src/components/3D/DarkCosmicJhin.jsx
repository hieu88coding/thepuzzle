/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function DarkCosmicJhin(props) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF('/DarkCosmicJhin-transformed.glb')
    const { actions } = useAnimations(animations, group)
    console.log(actions);
    console.log(materials);
    useEffect(() => {
        for (const key in actions) {
            actions[key].stop();
            materials["Base_mat"].wireframe = false
            materials["Cloth_mat"].wireframe = false
            materials["Head_Normal_mat"].wireframe = false
            materials["Shoulder_mat"].wireframe = false
        }
        if (props.actionType === "Respawn") {
            materials["Base_mat"].wireframe = true
            materials["Cloth_mat"].wireframe = true
            materials["Head_Normal_mat"].wireframe = true
            materials["Shoulder_mat"].wireframe = true
        }
        actions[props.actionType].reset().play();


    }, [props.actionType])
    return (
        <group ref={group} {...props} dispose={null}>
            <group name="AuxScene">
                <group position={props.position}>
                    <group name="Meshes" scale={[-0.009, 0.009, 0.009]}>
                        <skinnedMesh
                            name="mesh_0_2"
                            geometry={nodes.mesh_0_2.geometry}
                            material={materials.Base_mat}
                            skeleton={nodes.mesh_0_2.skeleton}
                            position={[0.922, -0.084, -2.026]}
                            scale={0.012}
                        />
                        <skinnedMesh
                            name="mesh_0_4"
                            geometry={nodes.mesh_0_4.geometry}
                            material={materials.Head_Normal_mat}
                            skeleton={nodes.mesh_0_4.skeleton}
                            position={[0.922, -0.084, -2.026]}
                            scale={0.012}
                        />
                        <skinnedMesh
                            name="mesh_0_5"
                            geometry={nodes.mesh_0_5.geometry}
                            material={materials.Cloth_mat}
                            skeleton={nodes.mesh_0_5.skeleton}
                            position={[0.922, -0.084, -2.026]}
                            scale={0.012}
                        />
                        <skinnedMesh
                            name="mesh_0_6"
                            geometry={nodes.mesh_0_6.geometry}
                            material={materials.Shoulder_mat}
                            skeleton={nodes.mesh_0_6.skeleton}
                            position={[0.922, -0.084, -2.026]}
                            scale={0.012}
                        />
                    </group>
                    <group name="Skeleton" scale={[-0.009, 0.009, 0.009]}>
                        <primitive object={nodes.Root} />
                        <primitive object={nodes.Buffbone_Glb_Channel_Loc} />
                        <primitive object={nodes.Buffbone_Glb_Ground_Loc} />
                        <primitive object={nodes.C_Buffbone_Glb_Center_Loc} />
                        <primitive object={nodes.Snap_Weapon2World} />
                        <primitive object={nodes.Snap_Sword2World} />
                        <primitive object={nodes.Buffbone_Cstm_FX2_Loc} />
                        <primitive object={nodes.Buffbone_Cstm_FX1_Loc} />
                        <primitive object={nodes.Buffbone_Cstm_FX4_Loc} />
                        <primitive object={nodes.Buffbone_Cstm_FX3_Loc} />
                        <primitive object={nodes.Healthbar_Buffbone} />
                        <primitive object={nodes.Snap_Extra2World} />
                    </group>
                    <primitive object={nodes.C_Buffbone_Glb_Layout_Loc} />
                    <primitive object={nodes.C_Buffbone_Glb_Overhead_Loc} />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/DarkCosmicJhin-transformed.glb')